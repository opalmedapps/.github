# SPDX-FileCopyrightText: Copyright (C) 2025 Opal Health Informatics Group <https://www.opalmedapps.com>
#
# SPDX-License-Identifier: MIT
---
name: Markdownlint

on:
  push:
    branches:
      - main
  pull_request:
  workflow_call:
    inputs:
      semantic-linebreak:
        type: boolean
        default: false

concurrency:
  group: "${{ github.ref }}-markdownlint"
  cancel-in-progress: true

permissions:
  contents: read
  # required for upload-sarif action
  # https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/uploading-a-sarif-file-to-github#example-workflow-for-sarif-files-generated-outside-of-a-repository
  security-events: write

jobs:
  markdownlint:
    runs-on: ubuntu-latest
    steps:
      - name: Choose markdownlint config file
        shell: bash
        run: |
            SEMANTIC_LINEBREAK=${{ inputs.semantic-linebreak }}
            echo $SEMANTIC_LINEBREAK
            if [[ -n "$SEMANTIC_LINEBREAK" && $SEMANTIC_LINEBREAK == true ]]; then
              echo "CONFIG_FILE=semantic-linebreak.yaml" >> $GITHUB_ENV
            else
              echo "CONFIG_FILE=default-config.yaml" >> $GITHUB_ENV
            fi
      - name: Print chosen config file
        run: echo $CONFIG_FILE
      - uses: actions/checkout@v4.2.2
      - name: Run markdownlint with enforcing semantic linebreak
        uses: YannickTeKulve/docker-run-action@0.0.6
        with:
          image: davidanson/markdownlint-cli2-rules:v0.17.2
          # node user does not have permissions to workspace due to user id mismatch
          options: -v ${{ github.workspace }}:/workdir --user root --env CONFIG_FILE=$CONFIG_FILE
          # use the config file that is stored outside the root for CI specific configuration
          run: |
            export
            markdownlint-cli2 --config .github/markdownlint/$CONFIG_FILE "**/*.md"
        continue-on-error: true
      # Needs to be a public repo in order for uploading SARIF files to work
      # https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/uploading-a-sarif-file-to-github
      - uses: github/codeql-action/upload-sarif@v3
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: markdownlint-cli2-sarif.sarif
          # Optional category for the results
          # Used to differentiate multiple results for one commit
          category: markdownlint
      # fail if there are markdownlint violations
      - name: Check markdownlint results
        run: |
          cat markdownlint-cli2-sarif.sarif | grep -q '"results": \[\]'
